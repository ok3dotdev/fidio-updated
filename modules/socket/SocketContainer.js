import{initialize}from"../utility/socket/index";import React,{useRef,useEffect}from"react";const SocketContainer=l=>{const s=l["_socket"];let n=useRef(!1);useRef(null);const[c,i]=React.useState(null),e=(useEffect(()=>{!n.current&&l._loggedIn&&l.dborigin&&e()},[s,n.current,l._loggedIn,l.dborigin]),()=>new Promise((e,o)=>{s.connected&&l._loggedIn&&l.dborigin&&initialize(s,l._loggedIn,l.dborigin),s.on("connect",e=>{console.log("Connected to socket ∞¦∞",s),n.current=!0,setTimeout(()=>{initialize(s,l._loggedIn,l.dborigin)},300)},{reconnectionAttempts:5}),s.on("disconnect",e=>{console.log("Disconnected from socket",s),c||"io server disconnect"===e&&(n.current=!1,e=setTimeout(()=>{s.connect(),i(null)},5e3),i(e))}),s.on("connect_error",e=>{console.log("Connection failed",e),n.current=!1;e=setTimeout(()=>{t(),i(null)},5e3);i(e)});let t=(e=5e3)=>{setTimeout(()=>{s.connect()},e)};return e()}));return useEffect(()=>{if(s){const e=e=>{console.log(e),l.setRooms&&l.setRooms(e)},o=e=>{console.log(e)},t=e=>{l._LocalEventEmitter.dispatch("uploadUpdate",e)},n=e=>{l.setRooms&&(console.log("Rooms",e),l.setRooms(e)),setTimeout(()=>{e?.log&&l._LocalEventEmitter.dispatch("receive_chat",e.log)},250)},c=e=>{console.log("Receive",e),e?.log&&l._LocalEventEmitter.dispatch("receive_chat",e.log)},i=e=>{console.log(e),e?.tables&&l._LocalEventEmitter.dispatch("receive_ban_table",e.tables)},r=e=>{e&&l._LocalEventEmitter.dispatch("scraper_updates",e)};return s.on("returnInitialize",e),s.on("returnNotify",o),s.on("joinChat",n),s.on("receiveChat",c),s.on("receiveBanTable",i),s.on("scraperUpdates",r),s.on("uploadUpdate",t),()=>{s.off("returnInitialize",e),s.off("returnNotify",o),s.off("joinChat",n),s.off("receiveChat",c),s.off("receiveBanTable",i),s.off("scraperUpdates",r),s.off("uploadUpdate",t)}}},[l._loggedIn,l.setRooms]),React.createElement("div",null)};export default SocketContainer;