import{initialize}from"../utility/socket/index";import React,{useRef,useEffect}from"react";const SocketContainer=r=>{const s=r["_socket"];let n=useRef(!1);useRef(null);const[c,i]=React.useState(null),e=(useEffect(()=>{!n.current&&r._loggedIn&&r.dborigin&&e()},[s,n.current,r._loggedIn,r.dborigin]),()=>new Promise((e,o)=>{s.connected&&r._loggedIn&&r.dborigin&&initialize(s,r._loggedIn,r.dborigin),s.on("connect",e=>{console.log("Connected to socket ∞¦∞",s),n.current=!0,setTimeout(()=>{initialize(s,r._loggedIn,r.dborigin)},300)},{reconnectionAttempts:5}),s.on("disconnect",e=>{console.log("Disconnected from socket",s),c||"io server disconnect"===e&&(n.current=!1,e=setTimeout(()=>{s.connect(),i(null)},5e3),i(e))}),s.on("connect_error",e=>{console.log("Connection failed",e),n.current=!1;e=setTimeout(()=>{t(),i(null)},5e3);i(e)});let t=(e=5e3)=>{setTimeout(()=>{s.connect()},e)};return e()}));return useEffect(()=>{if(s){const e=e=>{console.log(e),r.setRooms&&r.setRooms(e)},o=e=>{console.log(e)},t=e=>{r.setRooms&&(console.log("Rooms",e),r.setRooms(e)),setTimeout(()=>{e?.log&&r._LocalEventEmitter.dispatch("receive_chat",e.log)},250)},n=e=>{console.log("Receive",e),e?.log&&r._LocalEventEmitter.dispatch("receive_chat",e.log)},c=e=>{console.log(e),e?.tables&&r._LocalEventEmitter.dispatch("receive_ban_table",e.tables)},i=e=>{e&&r._LocalEventEmitter.dispatch("scraper_updates",e)};return s.on("returnInitialize",e),s.on("returnNotify",o),s.on("joinChat",t),s.on("receiveChat",n),s.on("receiveBanTable",c),s.on("scraperUpdates",i),()=>{s.off("returnInitialize",e),s.off("returnNotify",o),s.off("joinChat",t),s.off("receiveChat",n),s.off("receiveBanTable",c),s.off("scraperUpdates",i)}}},[r._loggedIn,r.setRooms]),React.createElement("div",null)};export default SocketContainer;