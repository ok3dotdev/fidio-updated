function _extends(){return(_extends=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var a,n=arguments[t];for(a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}import React from"react";import Link from"next/link";import Tooltip from"@mui/material/Tooltip";import{resolveDefaultStyle,resolveStyles,resolveRegionBasedPrice}from"../../utility/ecommerce";import{fireGlobalEvent}from"../../utility/utility";import{getFormattedDate}from"../../util";import AllInclusive from"@mui/icons-material/AllInclusive";import ConfirmationNumber from"@mui/icons-material/ConfirmationNumber";import Inventory from"@mui/icons-material/Inventory";import Stadium from"@mui/icons-material/Stadium";import{Lineup,ProductImageManager}from".";import PIMStyles from"./ProductImageManager.module.scss";import TextareaAutosize from"react-textarea-autosize";import{selectThisText}from"../../utility/utility/event";const Module=a=>{const[e,t]=React.useState(!1),[n,r]=React.useState({}),[l,i]=React.useState(null);var[c,o]=React.useState(null),s=React.useRef(),u=React.useRef();const d=React.useRef(),m=React.useRef(),[p,y]=React.useState(!1);var g=React.useRef();const f=React.useRef();React.useEffect(()=>{e||(a.setDefaultPriceHtml(),t(!0))},[e,t,a.product]),resolveDefaultStyle(a.product,n,r,l,i);var h=React.useCallback(t=>{var e;t&&t.currentTarget&&t.currentTarget.value&&(r(t.currentTarget.value),e=a.product.styles.find(e=>e.sid===t.currentTarget.value))&&e.option&&e.option[0]&&e.option[0].sid&&i(e.option[0].sid)}),v=React.useCallback(e=>{i(e.currentTarget.value)}),R=React.useCallback(e=>{var t;console.log(e,"edit"),e&&e.currentTarget&&e.currentTarget.getAttribute&&e.currentTarget.getAttribute("modif")&&(t=e.currentTarget.getAttribute("modif"),e.currentTarget,"edit"===t)&&a.handleEdit&&(a.handleEdit(a.product),setTimeout(()=>{a.nameRef.current.value=a?.product?.name,a.product.styles&&a.product.styles[0]&&(a.styleInput.current.value=a.product.styles[0].style,a.setEditingSelectedStyle(a.product.styles[0].sid),setTimeout(()=>{console.log(a,a.product.styles[0].option&&a.product.styles[0].option[0]),a.product.styles[0].option&&a.product.styles[0].option[0]&&(a.optionInput.current&&(a.optionInput.current.value=a.product.styles[0].option[0].option),a.setEditingSelectedOption(a.product.styles[0].option[0].sid),a.quantityInput.current.value=a.product.styles[0].option[0].quantity,a.priceInput.current.value=a.product.styles[0].price,console.log(a.product.detailmeta),a.product.detailmeta&&(d.current&&(d.current.value=a.product.detailmeta.ticket),m.current)&&(m.current.value=a.product.detailmeta.livestream),a.setEditingOptionsMeta(a.product.detailmeta));var e=document.getElementById(a.product.id);e?.offsetTop&&window?.scrollTo&&a._isMobile&&window.scrollTo({behavior:"smooth",top:e.offsetTop-5})},250))},250))}),E=React.useCallback(async e=>{fireGlobalEvent(e,a._LocalEventEmitter)}),b=React.useCallback(e=>p?(y(!1),!1):(y(!0),!0)),C=React.useCallback(e=>{const t=a.changeCurrentCurrency(a.editing,e.currentTarget.value);t&&(f.current.innerHTML=t,e=Object.entries(a.regionsData).find(e=>e[1].currency===t))&&e[1]&&(a.setCurrentDefinePriceCurrency(e[1]),a.setDefaultPriceHtml(e[1]))}),S=React.useCallback(e=>{var t,e=e.currentTarget.value;console.log(e,a.editing,a.editingOptionsMeta),a.editing&&(t={...a.editingOptionsMeta},console.log(t,a.editingOptionsMeta,a.editing),t)&&a.setEditing&&(t.description=e,(e={...a.editing}).detailmeta=t,a.setEditing(e),t)&&a.setEditingOptionsMeta&&a.setEditingOptionsMeta(t)});const I=n&&a.product&&a.product.styles&&a.product.styles.find(e=>e.sid===n)?a.product.styles.find(e=>e.sid===n):null;var P=I&&I.option?l?I.option.find(e=>e.sid===l):I.option[0]||null:null,N=a.product&&a.product.owner&&a._loggedIn&&a._loggedIn.identifier&&a._loggedIn.identifier===a.product.owner,T=React.useMemo(()=>resolveRegionBasedPrice(a,I),[a.product,I,"$"]),x=a?.editing?.id&&a?.product?.id&&a.editing.id===a.product.id,w=x&&a?.editingOptionsMeta||!x&&a.product.detailmeta;return React.createElement("div",{className:`${x?PIMStyles.currentlyEditingProductContainer:"Product_col"} `+a.className,id:a.product&&a.product.id?a.product.id:"",selectedstyle:I?.sid?I.sid:"",currentoption:P?.sid?P.sid:""},x?React.createElement("div",{className:""+PIMStyles.currentEditingProductInnerContainer},React.createElement("div",{className:""+PIMStyles.currentlyEditingProductContent},React.createElement("div",{className:PIMStyles.productImgContainer+` ${x?"":"Product_img_container"} Product_img_container_large`},React.createElement(ProductImageManager,a)),React.createElement("div",{className:PIMStyles.productMetaContainer+" Product_meta_container"},React.createElement("div",{style:{height:`calc(100% - ${a._loggedIn?"25":"40"}px)`,maxHeight:"75vh",overflow:"auto"}},React.createElement("div",null,React.createElement("div",{className:"flex gap-p2"},React.createElement(Tooltip,{title:"Name of Product",placement:"left"},React.createElement("label",{style:{fontWeight:"600"}},"Title: ")),React.createElement("input",{name:"name",placeholder:"Product Title",style:{fontWeight:"600",width:"100%"},onChange:a.setCurrentName,ref:a.nameRef,modif:"product_name",defaultValue:a?.editing?.name})),a.pageError.location&&"product_name"===a.pageError.location?React.createElement("div",{className:"error"},a.pageError.message):null),React.createElement(Tooltip,{title:"Product Description",placement:"left"},React.createElement(TextareaAutosize,{className:""+PIMStyles.textArea,name:"description",placeholder:"Description",defaultValue:a?.editing?.detailmeta?.description,onChange:S,ref:g})),React.createElement("div",{className:"flex gap-p2",style:{alignItems:"center"}},React.createElement(Tooltip,{title:"Set the price for the currently selected Style",placement:"left"},React.createElement("div",{style:{fontSize:".8rem",fontWeight:600}},a.currentDefinePriceCurrency?.symbol??"$")),React.createElement("input",{type:"currency",style:{width:"100%"},defaultValue:"10.00",ref:a.priceInput,onChange:a.setCurrentPrice}),I&&"USD"===a.currentDefinePriceCurrency?.currency&&I?.price!=a?.priceInput?.current?.value||"USD"!==a.currentDefinePriceCurrency?.currency&&(!I.priceTable||I.priceTable&&!I.priceTable[a.currentDefinePriceCurrency.currency]||a?.currentDefinePriceCurrency?.currency&&I.priceTable&&Object.prototype.hasOwnProperty.call(I.priceTable,a.currentDefinePriceCurrency.currency)&&I.priceTable[a.currentDefinePriceCurrency.currency]!=a.priceInput.current.value)?React.createElement(Tooltip,{title:"The price displayed is currently not set for this product style. Click here to set it"},React.createElement("button",{onClick:a.setCurrentPrice,value:a.priceInput?.current?.value,style:{whiteSpace:"nowrap",lineHeight:".5rem",fontSize:".75rem"}},"Set Price")):null,React.createElement(Tooltip,{title:"You can set pricing in multiple currencies. Although the value you keep selected here will be the primary currency. Use the currency selector to choose a currency to begin setting prices in the respective currency. Countries that users reside in for which you have not set a currency will be presented the closest relevant currency you have defined a pricepoint in"},React.createElement("div",{className:PIMStyles.currencyLabel+" "+(p?""+PIMStyles.currencyLabelActive:null),style:{lineHeight:".5rem"},onClick:b,ref:f},a.currentDefinePriceCurrency?.currency??x?.meta?.currency??"USD")),p?React.createElement("div",{className:""+PIMStyles.setCurrencyExternalContainer},React.createElement("div",{className:""+PIMStyles.setCurrencyContainer},React.createElement("select",{id:a.editing.id+"_setCurrency",name:a.editing.id+"_setCurrency",style:{width:"100%"},onChange:C,ref:a.setCurrencySelect,defaultValue:a.currentDefinePriceCurrency?.currency??"USD"},a?.regionsData?Object.entries(a.regionsData).map(e=>React.createElement("option",{className:`${PIMStyles.setCurrencyOption} ${"USD"!==e[1].currency&&I?.priceTable&&Object.prototype.hasOwnProperty.call(I.priceTable,e[1].currency)?PIMStyles.currencyOptionUsed:null} `+("USD"===e[1].currency?PIMStyles.currencyOptionUsed:null),value:e[1].currency},React.createElement("div",null,e[1].currency),React.createElement("div",null," "),React.createElement("div",null,e[1].name),React.createElement("div",null," "),React.createElement("div",null,e[1].symbol))):null))):null,React.createElement(Tooltip,{title:"Set the quantity for the currently selected Style & Option combo"},React.createElement("div",{style:{fontSize:".8rem",fontWeight:600,display:a.selectedOption&&a.selectedOption.quantity&&1e7===a.selectedOption.quantity?"none":"block"}},"Qty")),React.createElement("input",{type:"number",style:{width:"100%",display:a.selectedOption&&a.selectedOption.quantity&&1e7===a.selectedOption.quantity?"none":"block"},defaultValue:"10",ref:a.quantityInput,onChange:a.setCurrentQuantity}),React.createElement(Tooltip,{title:"Infinite stock"},React.createElement(AllInclusive,null)),React.createElement("input",{type:"checkbox",style:{margin:0},onChange:a.setInfinity,checked:a.selectedOption&&a.selectedOption.quantity&&1e7===a.selectedOption.quantity})),React.createElement("div",{style:{border:"1px solid #484848",marginTop:".125rem",marginBottom:".25rem"}}),React.createElement("div",{className:"flex",style:{flexWrap:"wrap",gap:".05rem 0.2rem",marginBottom:".125rem"}},React.createElement(Tooltip,{title:"If your product has multiple styles, set them here. A style should be an alternate design or color for a single product that you want to track as single product. For example you might have white, black, grey for t-shirts as individual styles.",placement:"right"},React.createElement("div",{className:"flex gap-p2",style:{alignItems:"center"}},React.createElement("div",{style:{fontSize:".8rem",fontWeight:600}},"Style"),React.createElement("div",{className:"dropdown_input"},React.createElement("input",{type:"text",ref:a.styleInput,onChange:a.setCurrentStyleName}),React.createElement("select",{id:a.editing.id+"_styles",name:a.editing.id+"_styles",style:{width:"100%"},onChange:a.changeCurrentStyle},a.resolveStyles(a.editing).map((e,t)=>React.createElement("option",{value:e.sid,className:"style_option",key:t},e.style)))))),a.selectedStyle&&0<a.selectedStyle.option.length&&a.selectedStyle.option[0]&&Object.hasOwnProperty.call(a.selectedStyle.option[0],"option")?React.createElement(Tooltip,{title:"If your product has options, set them here. An option should be a sizing or format choice that exists for all or most styles. For example you might have sizes XS, S, M, L, XL or OS as individual options per style.",placement:"right"},React.createElement("div",{className:"flex gap-p2",style:{alignItems:"center"}},React.createElement("div",{style:{fontSize:".8rem",fontWeight:600}},"Option"),React.createElement("div",{className:"dropdown_input"},React.createElement("input",{type:"text",ref:a.optionInput,onChange:a.setCurrentOptionName}),React.createElement("select",{id:a.editing.id+"_options",name:a.editing.id+"_options",style:{width:"100%"},onChange:a.changeCurrentOption,ref:a.optionSelect},a.editing.styles.find(e=>e.sid===a.editingSelectedStyle).option.map((e,t)=>React.createElement("option",{value:e.sid,className:"option_option",key:t},e.option)))))):null),React.createElement("div",{className:"flex gap-p2 Product_admin_choice_container"},React.createElement("button",{onClick:a.addStyle},"Add Style"),React.createElement("button",{onClick:a.addOption},"Add Option"),React.createElement(Tooltip,{title:"Set the product type",placement:"right"},React.createElement("div",{className:"flex gap-p2",style:{fontSize:".8rem",alignItems:"center"}},React.createElement("span",{className:"flex"},React.createElement("input",{type:"radio",id:"virtual",name:"fav_language",value:"virtual",defaultChecked:!0,onChange:a.onProductTypeChange}),React.createElement("label",{for:"virtual"},"Virtual")),React.createElement("span",{className:"flex"},React.createElement("input",{type:"radio",id:"physical",name:"fav_language",value:"physical",onChange:a.onProductTypeChange}),React.createElement("label",{for:"physical"},"Physical"))))),React.createElement("div",{className:"promptContainer",style:{alignItems:"center",borderRadius:".5rem",margin:".25rem 0"}},React.createElement("div",{className:"flex gap-p2"},React.createElement(Tooltip,{title:"Ticketed Products offer universally unique ids that are unique across the product being sold and can be stamped onto Ticket Images. Virtual Tickets are for Virtual Events. Physical Tickets serve Virtual Tickets for your own In Person Events.",className:"flex gap-p2",style:{alignItems:"center"},placement:"left"},React.createElement("div",{style:{fontSize:".8rem"}},"Is this a ticket?"),React.createElement(ConfirmationNumber,{style:{width:"15px",height:"15px"}})),React.createElement("input",{type:"checkbox",style:{margin:0},value:a.product.detailmeta.ticket,defaultChecked:a.product.detailmeta.ticket,onChange:a.setOptionsMetaData,option:"ticket",ref:d})),w.ticket?React.createElement("div",null,React.createElement(Tooltip,{title:"Please add dates your event is happening. Enter dates in the following format MON-DD-YYYY-HH:MM or they will not be parsed as dates.",className:"flex gap-p2",style:{alignItems:"center"},placement:"right"},React.createElement("span",{style:{fontSize:".8rem",fontWeight:"600",whiteSpace:"nowrap"}},"Date for Event"),React.createElement("input",{type:"text",style:{marginBottom:".125rem",width:"-webkit-fill-available"},placeholder:"Date in MON-DD-YYYY-HH:MM format. If the ticket does not have an event date leave empty",onInput:a.setOptionsMetaData,option:"eventDateDef",option2:"input",defaultValue:a?.product?.detailmeta?.eventDateDef?.input})),0<a?.product?.detailmeta?.eventDateDef?.dates?.length?React.createElement("div",{className:"tagContainer",style:{marginTop:".25rem",marginBottom:".25rem"}},a.product.detailmeta.eventDateDef.dates.map(e=>""!==e?React.createElement("div",{className:"tagItem"},e?getFormattedDate(e,{pretty:!0}):""):React.createElement("div",null))):React.createElement("div",null)):null),"virtual"===a?.editingOptionsMeta?.productType?React.createElement("div",null,React.createElement("div",{className:"promptContainer",style:{borderRadius:".5rem",margin:".25rem 0"}},React.createElement("div",{className:"flex gap-p2",style:{alignItems:"center",height:"20px"}},React.createElement(Tooltip,{title:"You can use a date to authorize all users that purchase this ticket for access to your livestreams on that day. Or you can use a tag that you must include in the livestream tags field when you create it. Please use this if you want to put your livestream behind this paywalled purchase",className:"flex gap-p2",style:{alignItems:"center"},placement:"left"},React.createElement("div",{style:{fontSize:".8rem"}},"Is this for a livestream?"),React.createElement(Stadium,{style:{width:"15px"}})),React.createElement("input",{type:"checkbox",style:{margin:0},value:a.product.detailmeta.livestream,defaultChecked:a.product.detailmeta.livestream,onChange:a.setOptionsMetaData,option:"livestream",ref:m})),w.livestream?React.createElement("div",null,React.createElement(Tooltip,{title:"Enter dates or words for matching authorization. Enter dates in the following format MON-DD-YYYY-HH:MM. Time must be input in 24 H military time. Values that do not match dates will be parsed as Tags that can be added to livestreams. Any matches will authorize viewership of the stream for purchases of this ticket",className:"flex gap-p2",style:{alignItems:"center"},placement:"right"},React.createElement("span",{style:{fontSize:".8rem",fontWeight:"600",whiteSpace:"nowrap"}},"Auth Keys | Tags"),React.createElement("input",{type:"text",style:{marginBottom:".125rem",width:"-webkit-fill-available"},placeholder:"Date in DD/MM/YY format or a Tag",onInput:a.setOptionsMetaData,option:"livestreamDef",option2:"input",defaultValue:a?.product?.detailmeta?.livestreamDef?.input})),React.createElement("span",{className:"flex gap-p2",style:{marginBottom:".25rem"}},0<a?.product?.detailmeta?.livestreamDef?.dates.length?React.createElement("div",{className:"tagContainer",style:{marginTop:".25rem"}},a.product.detailmeta.livestreamDef.dates.map(e=>""!==e?React.createElement("div",{className:"tagItem"},e?getFormattedDate(e,{pretty:!0}):""):React.createElement("div",null))):React.createElement("div",null),0<a?.product?.detailmeta?.livestreamDef?.tags.length?React.createElement("div",{className:"tagContainer",style:{marginTop:".25rem"}},a.product.detailmeta.livestreamDef.tags.map(e=>""!==e?React.createElement("div",{className:"tagItem"},e):React.createElement("div",null))):React.createElement("div",null))):null,React.createElement(Lineup,_extends({},a,{product:a.product,setWarning:o,appendFormData:a?.appendFormData}))),c&&c.message?React.createElement("div",{className:""+PIMStyles.warning},React.createElement("div",{className:""+PIMStyles.warningItemContainer},React.createElement("div",{className:""+PIMStyles.warningItem},c.message))):null):React.createElement("div",null),React.createElement("div",{className:"flex gap-p2 promptContainer",style:{alignItems:"center",height:"20px",borderRadius:".5rem",margin:".25rem 0"}},React.createElement(Tooltip,{title:"Allow for your customers to subscribe to your product. This is a guarantee by your company that you will continue to deliver your Product to any subscribed customers. Subscriptions will charge monthly by default.",className:"flex gap-p2",style:{alignItems:"center"},placement:"left"},React.createElement("div",{style:{fontSize:".8rem"}},"Is this a subscription?"),React.createElement(Inventory,{style:{width:"15px"}})),React.createElement("input",{type:"checkbox",style:{margin:0},value:a.product.detailmeta.subscription,defaultChecked:a.product.detailmeta.subscription,onChange:a.setOptionsMetaData,option:"subscription"})),a?.product?.published?React.createElement("div",{className:"flex gap-p2"},React.createElement("div",{className:"flex gap-p2 shareButton",selectValue:""+(a?.product?.id?`${a.dev?a.devAddress:a?.domainUrl}/pr?p=`+a.product.id:null),onClick:selectThisText},React.createElement(Inventory,null),React.createElement("div",null,"Share")),React.createElement(Link,{href:""+(a?.product?.id?`${a.dev?a.devAddress:a?.domainUrl}/pr?p=`+a.product.id:null)},React.createElement("div",{className:"flex gap-p2 shareButton"},React.createElement(Inventory,null),React.createElement("div",null,"View")))):null),React.createElement("div",{className:"flex gap-p2 Product_admin_choice_container",style:{marginTop:".125rem"}},React.createElement("button",{onClick:a.handlePublishProduct,modif:"publish",existing:"true"},"Publish"),React.createElement("button",{onClick:a.handlePublishProduct,modif:"save",existing:"true"},"Save"),a.editing?React.createElement("button",{onClick:a.handleCancelProduct,modif:"save"},a.editing.new?"Abandon":"Cancel"):null)))):React.createElement(React.Fragment,null,React.createElement("div",{className:PIMStyles.productImgContainer+" Product_img_container",style:{position:"relative"}},N?React.createElement(Tooltip,{title:"Edit Product",placement:"left"},React.createElement("button",{className:PIMStyles.editProductButton+" "+(a._isMobile?""+PIMStyles.editProductButtonMobile:null),onClick:R,modif:"edit",alt:"edit"},React.createElement("div",{className:"edit material-icons",style:{fontSize:".85rem"}},"edit"))):null,React.createElement(ProductImageManager,{cdn:a.cdn,product:a.product,_loggedIn:a._loggedIn,domainKey:a.domainKey,apiUrl:a.apiUrl,setEditing:a.setEditing,setCombinedFeed:a.setCombinedFeed})),React.createElement("div",{className:"Product_meta_container"},React.createElement("div",null,React.createElement("div",{className:""+(a?.classes?.productName??"")},a.product.name)),a.product&&a.product.styles&&1<a.product.styles.length?React.createElement("div",{className:"flex gap-p2",style:{alignItems:"center"}},React.createElement("select",{id:a.product.id+"_styles",name:a.product.id+"_styles",style:{width:"100%"},onChange:h,ref:u},resolveStyles(a.product).map((e,t)=>React.createElement("option",{value:e.sid,className:"style_option",key:t},e.style)))):null,I&&I.option&&I.option[0]&&I.option[0].option?React.createElement("div",{className:"flex gap-p2",style:{alignItems:"center"}},React.createElement("div",{className:"dropdown_input"},React.createElement("select",{id:a.product.id+"_options",name:a.product.id+"_options",style:{width:"100%"},onChange:v,ref:s},a.product.styles.find(e=>e.sid===n).option.map((e,t)=>React.createElement("option",{value:e.sid,className:"option_option",key:t},e.option))))):null,React.createElement("div",{className:"flex gap-p2",style:{alignItems:"center"}},React.createElement("div",{className:"flex gap-p2",style:{margin:".125rem 0"}},React.createElement("div",{style:{fontSize:"1rem",fontWeight:600}},React.createElement("span",null,T?.symbol??null),React.createElement("span",null,T?.price??null)),React.createElement("div",{className:"Product_CurrencyLabel",style:{fontSize:".8rem",fontWeight:600,background:"rgba(150, 150, 150, .5)",padding:".075rem",borderRadius:".25rem"}},T?.currency??"USD")),React.createElement("div",{style:{display:"none",fontSize:".8rem",fontWeight:600}},P&&P.quantity?P.quantity:"")),React.createElement("div",{className:"flex gap-p2 Product_admin_choice_container wrap",style:{marginTop:".125rem"}},React.createElement("button",{onClick:E,item:a.product.id,selectedstyle:n,currentoption:l,action:"add_to_cart"},"Add To Cart"),a?.product?.detailmeta?.subscription?React.createElement("button",{onClick:E,item:a.product.id,selectedstyle:n,currentoption:l,action:"add_to_cart_subscribe"},"Subscribe"):null))))};export default Module;